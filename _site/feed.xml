<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Bryce McDonnell - All Posts</title>
		<description>All Posts At BryceMcDonnell.com</description>
		<link>http://www.brycemcdonnell.com</link>
		<atom:link href="http://www.brycemcdonnell.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>After An Evening With Hadley</title>
        <description>&lt;p&gt;The infamous &lt;a href=&quot;https://en.wikipedia.org/wiki/Hadley_Wickham&quot;&gt;Hadley Wickham&lt;/a&gt;
&lt;a href=&quot;http://www.meetup.com/nyhackr/events/224749681/&quot;&gt;gave a talk&lt;/a&gt; last Friday
entitled “Pure, predictable, pipeable: creating fluent interfaces.”
There’s some debate about the role of pipes in writing R code and I’m
not interested in joining the holy war. Instead, I think there are two
rather nuanced points in his talk that are of high urgency for those
who use R as a critical piece of their statistical workflow.&lt;/p&gt;

&lt;h2 id=&quot;data-scientists-can-learn-a-lot-from-general-programmers&quot;&gt;Data Scientists can learn a lot from general programmers&lt;/h2&gt;

&lt;p&gt;What struck me the most about Hadley’s talk was his emphasis on what I
consider to be core programming principles. It’s understandable given
that a large number of data scientists (and I’m assuming that data
scientists are the principle users of R/R-studio) don’t have a lot of,
if any, formal training in programming. His canonical example was that
composing a workflow in R like this:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/brycemcd/b35393b745620ec97e0d.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I have a strong opinion that the former is much easier to read and
reason about than the latter code block. One test that I’ve used (and
Hadley alluded to) is the “future self” test in which you read the code
with a perspective of “if I had no idea what problem I was working on,
is this code descriptive enough to tell me?” In other words: “Can I
guess what the result of this function is?” Sometimes, having a
colleague read through it and tell you what it’s doing  (without any
background) is a helpful litmus test. Either way, experience has shown
that, after 6 months, I can start working on code with the %&amp;gt;% faster
than with the nested functions.&lt;/p&gt;

&lt;h3 id=&quot;why-is-this-useful&quot;&gt;Why is this useful?&lt;/h3&gt;

&lt;p&gt;It may seem like overkill to go to the trouble of good composition. It’s
not and we can rely on history as a guide.&lt;/p&gt;

&lt;p&gt;My background (obviously) is in programming and I’ve had the opportunity
to lead engineering teams. Growing junior developers into mid and senior
level programmers has been part of the job description. New developers
generally start with trying to “just make it work.” The tools are new
and the lack of experience makes it hard to appreciate the effort
involved to change the code later.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Code is malleable. It evolves quickly. Your processes should reflect
those traits&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Data science is a mix of math and code. Developing a deeper
understanding of the code part enables the scientist to allocate more of
her brain to the math parts of data science. When the programming effort
is minimal, the focus on math and discovery can be maximized. Spending
the time to make coding second nature is an investment in future
concentration on the models.&lt;/p&gt;

&lt;p&gt;I wonder if much of the syntax and public examples of R code is in this junior
developer state. We’re doing amazing things, but we spend a lot of time
reasoning about the code.&lt;/p&gt;

&lt;p&gt;Senior developers, on the other hand, spend a lot of time reasoning
about the correctness of the code rather than if it will work. For most
projects, we make sure that the code runs efficiently and can be read &amp;amp;
supported easily.&lt;/p&gt;

&lt;h3 id=&quot;how-do-you-make-coding-second-nature&quot;&gt;How do you make coding second nature?&lt;/h3&gt;

&lt;p&gt;Writing code is a craft and many professionals spend their entire
careers trying to get it “right.” It’s hard, but can be learned. One of
my favorite resources for learning object oriented programming
principles is &lt;a href=&quot;http://amzn.to/1OLDjcZ&quot;&gt;Practical Object Oriented Design in
Ruby&lt;/a&gt;. It’s grounded in the Ruby programming
language, but its principles extend well beyond Ruby.&lt;/p&gt;

&lt;p&gt;There are tons of online resources to make you a better coder. Check
Udacity, Coursera, Code School and a number of others.&lt;/p&gt;

&lt;p&gt;Learn another programming language (python makes sense for data
scientists) other than R. Once you get a good feel for it, apply those principles
you’ve learned to writing R code.&lt;/p&gt;

&lt;h2 id=&quot;r-needs-a-few-changes-to-compete-with-emerging-technologies&quot;&gt;R needs a few changes to compete with emerging technologies&lt;/h2&gt;

&lt;p&gt;R itself is a functional programming language and R-Studio is a great
IDE. R has evolved considerably in the last several years including the
use cases for which the language is being applied.&lt;/p&gt;

&lt;p&gt;Python, Scala, Ruby and a myriad of other languages are also evolving
rapidly to meet the changing needs of what I’ll call “data programmers.”
These are people moving data around to create new insights.&lt;/p&gt;

&lt;p&gt;Hadley touched on the concern that changing the programming interface of
R necessarily breaks legacy code. He sited this as a reason development of R packages
doesn’t move faster. That may be true, but the field is
moving aggressively and the language will need to do the same in order
to remain relevant as data programmers become more commonplace.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Breaking legacy code is a satisfactory side effect of creating a
better future. IMHO of course&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving fast and breaking legacy code can be painful but there are
alternatives.  Preventing catastrophic pain while the language advances would
require a community wide adherence to &lt;a href=&quot;http://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;.
Our tools should appreciate version numbers and timelines can be built
to advance the capabilities of the tools without leaving our legacy code
completely broken. Many package developers currently practice this
behavior, but a shift should occur to make it required.&lt;/p&gt;

&lt;h2 id=&quot;why-pipes-are-correct&quot;&gt;Why Pipes are correct&lt;/h2&gt;

&lt;p&gt;I can’t leave this post without some inflammatory remark about pipes. As
mentioned earlier in this post, the pipes interface is much more
readable than its purely functional counterpart.&lt;/p&gt;

&lt;p&gt;As data programmers become more prominent and as our R code is written
with the same discipline as python or java, I imagine we’ll emulate
the habits of great programmers. Pipes have been around forever and a
natural tool to anyone familiar with the command line. Small utility
scripts have been baked into the *nix operating systems and work really
well together because we always just pass plaintext around. In the same
way, data programmers should just be passing data frames around. This is
not an area where we have to be clever; let’s borrow some of the
greatest concepts of our computing history.&lt;/p&gt;

&lt;h2 id=&quot;in-the-end&quot;&gt;In the end&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;learn to be good programmers so we can focus on the math&lt;/li&gt;
  &lt;li&gt;use semantic versioning to clearly communicate the state of our tools
and any breaking changes&lt;/li&gt;
  &lt;li&gt;move data frames around in pipes to emulate how text is translated by
different *nix utilities&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://newyorktechjournal.com/about/&quot;&gt;Elliot Noma&lt;/a&gt; for taking
&lt;a href=&quot;http://newyorktechjournal.com/2015/09/pure-predictable-pipeable-creating-fluent-interfaces-with-r/&quot;&gt;better
notes&lt;/a&gt; than I did.&lt;/p&gt;
</description>
				<pubDate>Sat, 19 Sep 2015 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/data-science/2015/09/19/after-an-evening-with-hadley.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/data-science/2015/09/19/after-an-evening-with-hadley.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
			<item>
				<title>Open Source Product Development Experiment</title>
        <description>&lt;p&gt;Fellow developers,&lt;/p&gt;

&lt;p&gt;I’ve been a ruby developer for a little more than 10 years or so and have a stack
of projects that I’ve been intending to get to but haven’t made the time to follow
through with.&lt;/p&gt;

&lt;p&gt;After reading several posts on this list regarding the challenges new
developers face when finding their first real programming job, an idea for an
experiment arose:&lt;/p&gt;

&lt;p&gt;Mentor a small group of new programmers in developing open source code
and develop the stack of projects as representative work for future employers. The
idea attempts a symbiosis creating a broader area of work to show to potential
employers while also building some cool products.&lt;/p&gt;

&lt;p&gt;I’m envisioning two to four pairing teams to work together on some very
specific pieces of the development. About once a week or so, get together in
person to discuss what has been done and define the next areas of work. We would
implement common team practices (group chat, pull requests etc) in order to gain
more familiarity with the process of developing good software.&lt;/p&gt;

&lt;p&gt;This experiment is still being developed but has the following goals:&lt;/p&gt;

&lt;p&gt;Learning Objectives For All Participants:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Develop more experience in a programming language&lt;/li&gt;
  &lt;li&gt;Develop more experience with a regular engineering workflow&lt;/li&gt;
  &lt;li&gt;Develop pairing and collaborative relationships&lt;/li&gt;
  &lt;li&gt;Solve real world problems and develop products similar to how it’s
done in a business context&lt;/li&gt;
  &lt;li&gt;Share code, continue to develop public portfolio&lt;/li&gt;
  &lt;li&gt;Experiment with code/patterns/challenges outside your regular work
environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning Objectives Specific Backend Developers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gain more experience in ruby development including composition and
testing&lt;/li&gt;
  &lt;li&gt;Gain more experience with integrating other services like Redis,
Elasticsearch etc.&lt;/li&gt;
  &lt;li&gt;Gain more experience in deploying and supporting real world products&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning Objectives Frontend Developers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gain more experience with the tools of frontend development (grunt,
bower, gulp etc.)&lt;/li&gt;
  &lt;li&gt;Gain more experience with front end javascript frameworks (Angular,
react etc)&lt;/li&gt;
  &lt;li&gt;Build very performant interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The products being built would have to satisfy the criteria:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Interesting to all team members&lt;/li&gt;
  &lt;li&gt;Have clear technical challenges that could be demonstrated to
potential employers&lt;/li&gt;
  &lt;li&gt;Incorporate/aggregate external data sources to produce unique
experiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this sounds interesting, please let me know by filling out &lt;a href=&quot;http://j.mp/nyc-developermentorship-form&quot;&gt;this form&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Wed, 16 Sep 2015 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/development/2015/09/16/open-source-product-development-experiment.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/development/2015/09/16/open-source-product-development-experiment.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
			<item>
				<title>Comparing Weather In Portland Oregon To New York City</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;brycemcd&quot; data-size=&quot;large&quot; data-related=&quot;brycemcd&quot; data-text=&quot;Comparing weather data using ggplot in R&quot; data-count=&quot;none&quot; data-hashtags=&quot;rstats,weather&quot;&gt;Share This On Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently travelled back to my home town of Portland, Oregon and a
debate quickly broke out comparing the weather between where I live now
(New York City) and the Portland area. To settle the bet, quickly graphing a 
few seasons worth of data in R (of course!) was in order.&lt;/p&gt;

&lt;h2 id=&quot;the-approach&quot;&gt;The Approach&lt;/h2&gt;

&lt;p&gt;The main question that needed answering was &lt;strong&gt;How Similar are the
temperatures of Portland and New York?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using ggplot to show the last few seasons of high and low temperatures should
quickly get us a visual comparison of the two areas and allow us to draw
inferences of similarity.&lt;/p&gt;

&lt;h2 id=&quot;the-data&quot;&gt;The Data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ncdc.noaa.gov/cdo-web/search&quot;&gt;NOAA has a very accessible climate data repository&lt;/a&gt;.
It’s free to use and request and the level of detail is pretty
remarkable.&lt;/p&gt;

&lt;p&gt;I ordered a data set to include daily temperature and precipitation data
from 2012 to present (July 2015).&lt;/p&gt;

&lt;h2 id=&quot;the-analysis&quot;&gt;The Analysis&lt;/h2&gt;

&lt;p&gt;All the code is &lt;a href=&quot;#the-whole-analysis&quot;&gt;at the bottom of this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The data was ready for download in a few hours and was easily imported
into R. The data was clean and very little had to be done to prepare it
for graphing. For convenience, I created a temperature conversion function
and reset the TMAX and TMIN columns to read in Celcius rather than
tenths of degrees in Celcius.&lt;/p&gt;

&lt;p&gt;To get a good look at the daily temperatures, I used a ribbon plot.
Ribbon plots are great for showing a range of trending data. It was
famously used in &lt;a href=&quot;http://www.edwardtufte.com/tufte/graphics/minard_lg.gif&quot;&gt;Edward Tufte’s visual representation of Napoleon’s
march to
Moscow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since this is a visual analysis, the easiest thing to do is to graph the
temperature data simultaneously and visually observe any differences.
The first graph I produced was:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/weather_comparison_pdx_to_nyc.png&quot; alt=&quot;temperature graph of Portland, Or and New York City, NY&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Blue is New York City and green is Portland Oregon.&lt;/p&gt;

&lt;p&gt;A few observations immediately jump out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is quite a bit of overlap in the temperatures of the two cities&lt;/li&gt;
  &lt;li&gt;Portland does not get as cold in the winter&lt;/li&gt;
  &lt;li&gt;Portland’s low temperatures in the summer are much lower than NYC but
the highs are fairly similar.&lt;/li&gt;
  &lt;li&gt;This last winter in NYC sucked. I’m pretty sure that was a scientific
fact prior to this analysis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This graph allowed us to conclude that the temperatures of the two
locations are fairly similar during the spring and fall and the largest
differences exist in the summer and winter (when the temperatures are
highest and lowest). It seems that Portland provides respite from the
heat at night while New Yorkers continue to suffer all day and night.&lt;/p&gt;

&lt;p&gt;To confirm or reject this newfound observation, we could graph the
intra-day &lt;em&gt;range&lt;/em&gt; of the temperatures throughout the year and compare
the &lt;em&gt;difference of the ranges&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There’s a bit of nuance in the last statement. The range of the daily
temperature is found by subtracting the day’s high from the day’s low.
This produces a daily range of temperature. We can then subtract one
city’s range from another to produce a comparison of each day’s
temperature range. If Portland truly gets colder at night after a
similar daily high temperature then the range of temperature in Portland
will be higher. Subtracting Portland’s range from New York’s will
produce a result much higher than 0 if Portland does indeed get cooler
at night. :+1: for math!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/difference_in_range.png&quot; alt=&quot;difference in ranges&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The individual daily range is pretty noisy, but a smoother can be
applied to show the general seasonal differences.&lt;/p&gt;

&lt;p&gt;For the last three years, the temperature ranges in Portland and New
York are pretty similar &lt;em&gt;expcept&lt;/em&gt; during the summer. The difference in
ranges are pretty close to zero until summer when Portland fluctuates by
around 7 degrees. This year (2015) has the highest fluctuations.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;All in all, the temperatures in New York and Portland are pretty
similar. The biggest differences occur during the summer when New York
refuses to cool off at night.&lt;/p&gt;

&lt;p&gt;This was a fun chance to play around with the ribbon plot and do
graphical analysis.&lt;/p&gt;

&lt;h2 id=&quot;the-whole-analysis&quot;&gt;The Whole Analysis&lt;/h2&gt;

&lt;script src=&quot;https://gist.github.com/brycemcd/8a46239172271019f81e.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;brycemcd&quot; data-size=&quot;large&quot; data-related=&quot;brycemcd&quot; data-text=&quot;Comparing weather data using ggplot in R&quot; data-count=&quot;none&quot; data-hashtags=&quot;rstats,weather&quot;&gt;Share This On Twitter&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 20 Jul 2015 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/data-science/2015/07/20/comparing-weather-in-portland-oregon-to-new-york-city.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/data-science/2015/07/20/comparing-weather-in-portland-oregon-to-new-york-city.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
			<item>
				<title>Plotting User Retention Curves In R</title>
        <description>&lt;p&gt;This post was inspired by Dan Croak (&lt;a href=&quot;https://twitter.com/Croaky&quot;&gt;@croaky&lt;/a&gt;)
 over at &lt;a href=&quot;https://robots.thoughtbot.com/create-a-retention-curve-with-mixpanel-and-google-sheets&quot;&gt;The Giant Robots Blog&lt;/a&gt;.
His approach to user retention is spot-on and his walk through for user
retention graphs are very useful for building a consumer facing product.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/brycemcd/status/617433218627858432&quot;&gt;I tweeted&lt;/a&gt; that
a user retention curve is easier to explain to other people in the
business in a way that is actionable.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Create a Retention Curve with Mixpanel and Google Sheets -
much easier to grok than the waterfall charts imho &lt;a href=&quot;https://t.co/NvWfUFfHSV&quot;&gt;https://t.co/NvWfUFfHSV&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Bryce (@brycemcd) &lt;a href=&quot;https://twitter.com/brycemcd/status/617433218627858432&quot;&gt;July 4,
2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Taking this one step further, I think that building such a curve should
be mindless to generate. Dan’s tutorial was straightforward but making
it automatic will decrease the time to generate the graph. Making a user
retention graph a no-brainer will make it much more likely that it gets
generated at a regular interval and shared with other people in the
business. In particular, manually changing the colors and building a
graph in Google Sheets is fairly arduous.&lt;/p&gt;

&lt;h2 id=&quot;moar-automation&quot;&gt;MOAR AUTOMATION&lt;/h2&gt;

&lt;p&gt;Dan’s (and now my) goal of producing user retention curves can be better
automated. All it takes is R (or RStudio) and the downloaded csv from
Mixpanel (see Dan’s post for the format of the csv).&lt;/p&gt;

&lt;p&gt;After about an hour of playing (yes, it was super fun) in R, the process
can be better automated with &lt;a href=&quot;https://gist.github.com/brycemcd/5d6c9e77cd8597ff7027&quot;&gt;this
gist&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/brycemcd/5d6c9e77cd8597ff7027.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The script produces the following graphs (click to zoom in):&lt;/p&gt;

&lt;h3 id=&quot;all-data&quot;&gt;All Data&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/retention-all.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/retention-all.png&quot; width=&quot;100%&quot; alt=&quot;User Retention - All&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;filtered-data&quot;&gt;Filtered Data&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/retention-filtered.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/bme-blog/retention-filtered.png&quot; width=&quot;100%&quot; alt=&quot;User Retention - filtered&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that &lt;code&gt;X0.weeks.later&lt;/code&gt; isn’t that interesting for this product. So,
it can be cut out by simply subsetting the data:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;retention %&amp;gt;% filter(t != &#39;X0.weeks.later&#39; &amp;amp; weeks_ago != 27)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-future&quot;&gt;The Future&lt;/h2&gt;

&lt;p&gt;The next step is to automatically pull the data into R from the Mixpanel
API. It should be relatively straightforward.&lt;/p&gt;

&lt;p&gt;This script is certainly going to be useful to me as we continue to
build &lt;a href=&quot;https://www.cricketscircle.com&quot;&gt;Cricket’s Circle&lt;/a&gt;. I hope it’s
useful for you as you’re building whatever web or native product you’re
building. Let me know what you’re working on and, as always,
improvements are always welcome. Thanks Dan for the inspiration.&lt;/p&gt;
</description>
				<pubDate>Sun, 05 Jul 2015 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/plotting-user-retention-curves-in-R?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/plotting-user-retention-curves-in-R?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
			<item>
				<title>Detecting Duplicate Entries In Offerpop Campaign</title>
        <description>&lt;p&gt;I wound up having to do some anomaly detection for a giveaway campaign that recently completed.
By all accounts it was really successful! Sadly, some people didn’t play
by the rules and entered many more times than once. One person entered
more than 2000 times!&lt;/p&gt;

&lt;p&gt;Below is a simple bash script to detect a fairly high percentage of fraudulent
entries in just under a second:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/brycemcd/de6ef86346d035858164.js&quot;&gt;&lt;/script&gt;

</description>
				<pubDate>Tue, 12 May 2015 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/development/2015/05/12/detecting-duplicate-entries-in-offerpop-campaign.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/development/2015/05/12/detecting-duplicate-entries-in-offerpop-campaign.html?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
			<item>
				<title>Textmate Bundle For Asterisk Telephony</title>
        <description>&lt;p&gt;I’ve been getting more and more familiar with Asterisk I’ve been
blindly editing the configuration files in TextMate with no context
highlighting. This produced lots of really unnecessary errors. So, &lt;a href=&quot;http://www.github.com/brycem/asterisk-textmate-bundle&quot;&gt;I
decided to build a bundle from
scratch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s definitely a work in progress and I’d appreciate any work anyone
else would like to put into it&lt;/p&gt;
</description>
				<pubDate>Tue, 12 Jul 2011 00:00:00 -0400</pubDate>
				<link>http://www.brycemcdonnell.com/textmate-bundle-for-asterisk-telephony?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</link>
				<guid isPermaLink="true">http://www.brycemcdonnell.com/textmate-bundle-for-asterisk-telephony?utm_source=rss&amp;utm_medium=rss&amp;utm_medium=blogrss</guid>
			</item>
		
	</channel>
</rss>
